  ServerName        <% node['apache2-wrapper']['reverseproxy']['site'] -%>
  ProxyRequests     Off
<% node['apache2-wrapper']['reverseproxy']['host_aliases'].each do |a| -%>
  ServerAlias       <%= a %>
<% end -%>


  # Local reverse proxy authorization override
  # Most unix distribution deny proxy by default
  # (ie /etc/apache2/mods-enabled/proxy.conf in Ubuntu)
  <Proxy http://localhost:<%= node['apache2-wrapper']['port'] %>/*>
    Order deny,allow
    Allow from all
  </Proxy>

  ProxyPreserveHost on
  ProxyPass         /  http://localhost:<%= node['apache2-wrapper']['port'] %>/
  ProxyPassReverse  /  http://localhost:<%= node['apache2-wrapper']['port'] %>/
  ProxyPassReverse  /  http://localhost:<%= node['apache2-wrapper']['port'] %>/
<% node['apache2-wrapper']['reverseproxy']['host_aliases'].each do |a| -%>
  ProxyPassReverse  /  http://<%= a%>
<% end -%>

<% case node['apache2-wrapper']['reverseproxy']['server_auth_method'] -%>
<% when "cas" -%>
  CASLoginURL <%= node['apache2-wrapper']['reverseproxy']['cas_login_url'] %>
  CASValidateURL <%= node['apache2-wrapper']['reverseproxy']['cas_validate_url'] %>
  CASValidateServer <%= node['apache2-wrapper']['reverseproxy']['cas_validate_server'] %>
  <% if node['apache2-wrapper']['reverseproxy']['cas_root_proxy_url'] -%>
  CASRootProxiedAs <%= node['apache2-wrapper']['reverseproxy']['cas_root_proxy_url'] %>
  <% end -%>

  <Location />
    AuthType CAS
    require valid-user
  </Location>
<% when "basic" -%>
  <Location />
    AuthType basic
    AuthName "<% node['apache2-wrapper']['reverseproxy']['site'] -%>"
    AuthBasicProvider file
    AuthUserFile <%= File.join(node['apache']['dir'], 'htpasswd') %>
    require valid-user
  </Location>
<% end -%>
